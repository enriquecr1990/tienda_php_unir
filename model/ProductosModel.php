<?php

require_once 'ModeloBase.php';

class ProductosModel extends ModeloBase{

    private $msg;

    function __construct()
    {
        parent::__construct();
        $this->msg = [];
    }

    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
        $this->msg =[];
    }

    public function obtenerProductos($data){
        $extraQuery = $this->extraParametrosProducto($data);
        $consulta = "select p.*,ctp.nombre tipo_producto from producto p 
                inner join cat_tipo_producto ctp on ctp.id = p.cat_tipo_producto_id $extraQuery limit 20";
        $this->db->consulta($consulta);
        //echo $consulta;exit;
        $resultado = $this->db->resultado();
        foreach ($resultado as $r){
            $r->galeria_fotos = $this->obtenerGaleriaProducto($r->id);
        }
        return $resultado;
    }

    public function obtenerProductoId($idProducto){
        $query = "select * from producto p where p.id = $idProducto";
        $this->db->consulta($query);
        $producto = $this->db->resultado_row();
        $producto->galeria_fotos = $this->obtenerGaleriaProducto($idProducto);
        return $producto;
    }

    public function obtenerGaleriaProducto($idProducto){
        $consulta = "select * from producto_galeria pg where pg.producto_id = $idProducto";
        $this->db->consulta($consulta);
        $resultado = $this->db->resultado();
        return $resultado;
    }

    private function extraParametrosProducto($data){
        $extra_query = ' where 1=1';
        if(isset($data['busqueda_detalle']) && $data['busqueda_detalle'] != ''){
            $extra_query .= " and (p.clave_producto like '%".$data['busqueda_detalle']."%' 
                                OR p.nombre like '%".$data['busqueda_detalle']."%' 
                                OR p.descripcion like '%".$data['busqueda_detalle']."%')";
        }if(isset($data['busqueda_tipo']) && $data['busqueda_tipo'] != ''){
            $extra_query .= ' and p.cat_tipo_producto_id = '.$data['busqueda_tipo'];
        }if(isset($data['busqueda_genero']) && $data['busqueda_genero'] != ''){
            $extra_query .= " and p.genero = '".$data['busqueda_genero']."'";
        }if(isset($data['cat_tipo_producto']) && $data['cat_tipo_producto'] != ''){
            $extra_query .= ' and p.cat_tipo_producto_id = '.$data['cat_tipo_producto'];
        }
        return $extra_query;
    }

    public function guardarProducto($data){
        try{
            //para la parte de la galeria
            $fotos_galeria = $data['foto_galeria'];
            unset($data['foto_galeria']);
            if(isset($data['id']) && $data['id'] == 0){
                //para un nuevo registro
                $this->db->insertarRegistro('producto',$data);
                $idProducto = $this->db->getUltimoIdInsertado();
            } else{
                //para actualizar un registro
                $this->db->actualizarRegistro('producto',$data,array('id' => $data['id']));
                $this->eliminarFotosGaleriaProducto($data['id']);
                $idProducto = $data['id'];
            }
            //registramos la galeria
            foreach ($fotos_galeria as $fg){
                $foto['url_foto'] = $fg;
                $foto['producto_id'] = $idProducto;
                $this->db->insertarRegistro('producto_galeria',$foto);
            }
            return true;
        }catch (Exception $ex){
            $this->msg[] = 'Ocurrio un error en el sistema de BD, favor de intentar nuevamente';
            return false;
        }
    }

    /**
     * funciones para las ventas
     */
    public function ventas($parametros){
        $extraQuery = $this->extraParametrosVentas($parametros);
        $query = "select 
              c.id,c.folio,c.fecha_compra,
              concat(du.nombre,' ',du.paterno) cliente,
              c.monto, c.moneda,c.mensajeria,c.numero_guia
            from compra c 
              inner join data_usuario du on du.usuario_id = c.usuario_id
            where 1=1 $extraQuery limit 20";
        $this->db->consulta($query);
        $result = $this->db->resultado();
        foreach ($result as $r){
            $r->historia_estatus = $this->compraHistoriaEstatus($r->id);
        }
        return $result;
    }

    public function productosVenta($idCompra){
        $query = "select 
              p.*,ctp.nombre tipo_producto,cp.precio_compra,cp.compra_id
            from producto p
              inner join compra_producto cp on cp.producto_id = p.id
              inner join cat_tipo_producto ctp on ctp.id = p.cat_tipo_producto_id
            where cp.compra_id = $idCompra";
        $this->db->consulta($query);
        $resultado = $this->db->resultado();
        foreach ($resultado as $r){
            $r->galeria_fotos = $this->obtenerGaleriaProducto($r->id);
        }
        return $resultado;
    }

    public function compraHistoriaEstatus($idCompra){
        $query = "select 
              che.*,cce.nombre nombre_estatus
            from compra_historia_estatus che
              inner join cat_compra_estatus cce on cce.id = che.cat_compra_estatus_id
            where che.compra_id = $idCompra";
        $this->db->consulta($query);
        return $this->db->resultado();
    }

    public function actualizarVenta($data){
        try{
            $idEstatus = $data['cat_compra_estatus_id'];
            unset($data['cat_compra_estatus_id']);
            $this->db->actualizarRegistro('compra',$data,array('id' => $data['id']));
            $this->db->insertarRegistro('compra_historia_estatus',array('compra_id' => $data['id'],'cat_compra_estatus_id' => $idEstatus,'fecha' => date('Y-m-d H:i:s')));
            return true;
        }catch (Exception $ex){
            $this->msg[] = 'Ocurrio un error en el sistema, favor de intentar mÃ¡s tarde';
            return false;
        }
    }

    private function extraParametrosVentas($parametros){
        $extraQuery = '';
        if(isset($parametros['busqueda_detalle_ventas']) && $parametros['busqueda_detalle_ventas'] != ''){
            $extraQuery .= " AND ( du.nombre like '%".$parametros['busqueda_detalle_ventas']."%' 
                                OR du.paterno like '%".$parametros['busqueda_detalle_ventas']."%' 
                                OR du.materno like '%".$parametros['busqueda_detalle_ventas']."%'
                                OR du.correo like '%".$parametros['busqueda_detalle_ventas']."%'
                                OR du.telefono like '%".$parametros['busqueda_detalle_ventas']."%'
                                OR c.folio like '%".$parametros['busqueda_detalle_ventas']."%'
                                )";
        }if(isset($parametros['busqueda_fecha_ventas']) && $parametros['busqueda_fecha_ventas']){
            $extraQuery = " AND c.fecha_compra = '".$parametros['busqueda_fecha_ventas']."'";
        }if(isset($parametros['busqueda_genero_ventas']) && $parametros['busqueda_genero_ventas']){
            $extraQuery = " AND du.genero = '".$parametros['busqueda_genero_ventas']."'";
        }
        return $extraQuery;
    }

    /**
     * funciones privadas
     */
    private function eliminarFotosGaleriaProducto($idProducto){
        $this->db->eliminarRegistro('producto_galeria',array('producto_id' => $idProducto));
    }

}