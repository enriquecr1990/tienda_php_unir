<?php

require_once 'ModeloBase.php';

class UsuarioModel extends ModeloBase
{

    private $msg;

    function __construct()
    {
        parent::__construct();
        $this->msg = [];
    }

    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
        $this->msg = [];
    }

    public function getMsg(){
        return $this->msg;
    }

    public function registrarUsuario($dataUsuario){
        $dataUsuario['password'] = sha1($dataUsuario['password']);
        if($this->getUsuario($dataUsuario['usuario'],'comprador')){
            $this->msg[] = 'Existe un usuario '.$dataUsuario['usuario'].' registrado en el sistema, intente con otro distinto o inicie sesión en el sistema';
        }else {
            $this->db->insertarRegistro('usuario',$dataUsuario);
            $id_usuario_nuevo = $this->db->getUltimoIdInsertado();
            return $this->getUsuarioId($id_usuario_nuevo);
        }
    }

    public function registrarDataUsuarioNuevo($idUsuario,$usuario){
        $data_usuario['nombre'] = $usuario;
        $data_usuario['paterno'] = 'paterno';
        $data_usuario['materno'] = 'materno';
        $data_usuario['genero'] = 'h';
        $data_usuario['correo'] = 'ejemplo@correo.com';
        $data_usuario['telefono'] = '1234569874';
        $data_usuario['usuario_id'] = $idUsuario;
        return $this->db->insertarRegistro('data_usuario',$data_usuario);
    }

    public function login($data){
        $response = false;
        if($usuario = $this->getUsuario($data['usuario'],$data['tipo_usuario'])){
            $passSha1 = sha1($data['password']);
            if($passSha1 != $usuario->password){
                $this->msg[] = 'La contraseña que ingreso es incorrecta';
            }else{
                $response = true; //login correcto
            }
        }else{
            $this->msg[] = 'El usuario que ingreso no existe';
        }
        return $response;
    }

    public function getUsuario($usuario,$tipo_usuario){
        $this->db->consulta("select * from usuario u where u.usuario = '$usuario' and u.tipo_usuario = '$tipo_usuario'");
        $resultado = $this->db->resultado();
        $response = false;
        if(is_array($resultado) && sizeof($resultado) > 0){
            $response = $resultado[0];
        }
        return $response;
    }

    public function getUsuarioId($idUsuario){
        $this->db->consulta("select * from usuario u where u.id = $idUsuario");
        return $this->db->resultado_row();
    }

    public function getDataUsuario($usuario){
        $consulta = "select du.*,u.tipo_usuario from data_usuario du
            inner join usuario u on du.usuario_id = u.id
            where u.usuario = '$usuario'";
        $this->db->consulta($consulta);
        $usuario = $this->db->resultado_row();
        return $usuario;
    }

    public function actualizarDataUsuario($usuario){
        return $this->db->actualizarRegistro('data_usuario',$usuario,array('id' => $usuario['id']));
    }

    public function insertarDireccionUsuario($direccion){
        try{
            return $this->db->insertarRegistro('direccion_usuario',$direccion);
        }catch (Exception $ex){
            return false;
        }
    }

    public function obtenerDireccionesUsuario($idUsuario){
        $query = "select
                du.*,ce.nombre estado,cm.nombre municipio, cl.nombre localidad
            from direccion_usuario du  
                inner join cat_estado ce on ce.id_cat_estado = du.id_cat_estado 
                inner join cat_municipio cm on cm.id_cat_municipio = du.id_cat_municipio 
                inner join cat_localidad cl on cl.id_cat_localidad = du.id_cat_localidad 
            where du.data_usuario_id = $idUsuario and du.eliminado = 'no'";
        $this->db->consulta($query);
        return $this->db->resultado();
    }

    public function actualizarDireccionUsuario($direccion){
        return $this->db->actualizarRegistro('direccion_usuario',$direccion,array('id' => $direccion['id']));
    }

    public function eliminarDireccionUsuario($idDireccion){
        return $this->db->actualizarRegistro('direccion_usuario',array('eliminado' => 'si'),array('id' => $idDireccion));
    }

    //apartado para los clientes
    public function getClientes($parametros){
        $extraQuery = $this->extraParametrosClientes($parametros);
        $query = "select 
                u.id usuario_id,du.*,
                if(du.genero = 'h', 'Hombre','Mujer' ) genero_descripcion,
                (select count(*) from compra c where c.usuario_id = u.id ) ventas_totales,
                (select if(count(*) = 0,'No','Si') from carrito cr where cr.usuario_id = u.id ) carrito_activo
            from usuario u
                inner join data_usuario du on du.usuario_id = u.id
            where u.tipo_usuario = 'comprador' $extraQuery limit 20";
        $this->db->consulta($query);
        return $this->db->resultado();
    }

    public function getComprasCliente($idUsuario){
        $query = "select * from compra c where c.usuario_id = $idUsuario";
        $this->db->consulta($query);
        $resultado = $this->db->resultado();
        foreach ($resultado as $r){
            $r->historia_estatus = $this->compraHistoriaEstatus($r->id);
        }
        return $resultado;
    }

    public function compraHistoriaEstatus($idCompra){
        $query = "select 
              che.*,cce.nombre nombre_estatus
            from compra_historia_estatus che
              inner join cat_compra_estatus cce on cce.id = che.cat_compra_estatus_id
            where che.compra_id = $idCompra";
        $this->db->consulta($query);
        return $this->db->resultado();
    }

    private function extraParametrosClientes($parametros){
        $extraQuery = '';
        if(isset($parametros['busqueda_detalle']) && $parametros['busqueda_detalle'] != ''){
            $extraQuery .= " AND ( du.nombre like '%".$parametros['busqueda_detalle']."%' 
                                OR du.paterno like '%".$parametros['busqueda_detalle']."%' 
                                OR du.materno like '%".$parametros['busqueda_detalle']."%'
                                OR du.correo like '%".$parametros['busqueda_detalle']."%'
                                OR du.telefono like '%".$parametros['busqueda_detalle']."%'
                                )";
        }if(isset($parametros['busqueda_genero']) && $parametros['busqueda_genero'] != ''){
            $extraQuery .= " AND du.genero = '".$parametros['busqueda_genero']."'";
        }
        return $extraQuery;
    }



}